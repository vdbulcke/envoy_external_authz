admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9000

node:
  cluster: service_greeter
  id: test-id

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 8443 }

    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:  
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  # host_rewrite_literal: "server.domain.com"
                  cluster: service_backend
                request_headers_to_add:
                  - header:
                      key: x-custom-to-backend
                      value: value-for-backend-from-envoy
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    check_settings:
                      context_extensions:
                        x-forwarded-host: original-host-as-context  
                                          
          http_filters:  
          # - name: envoy.filters.http.lua
          #   typed_config:
          #     '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          #     inlineCode: |
          #       function envoy_on_request(request_handle)
          #         request_handle:logInfo('>>> LUA envoy_on_request Called')
          #         --buf = request_handle:body()
          #         --bufbytes = buf:getBytes(0, buf:length())
          #         --request_handle:logInfo(bufbytes)
          #       end
                
          #       function envoy_on_response(response_handle)
          #         response_handle:logInfo('>>> LUA envoy_on_response Called')
          #         response_handle:headers():add("X-Custom-Header-From-LUA", "bar")
          #       end             
 
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              grpc_service:
                envoy_grpc:
                  cluster_name: ext-authz

              include_peer_certificate: true
              # with_request_body:
              #   max_request_bytes: 1024
              #   allow_partial_message: true
          - name: envoy.filters.http.router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          require_client_certificate: true
          # ocsp_staple_policy: MUST_STAPLE
          common_tls_context:
            
            tls_params: 
              ## WARNING: RSA Client certificates are no longer supported in TLSv1.3
              tls_maximum_protocol_version: TLSv1_2 
            tls_certificates:
              - certificate_chain: { filename: "/opt/certs/servercert.pem" }
                private_key: { filename: "/opt/certs/serverkey.pem" }
            validation_context:
              trusted_ca:
                filename: /opt/certs/cacert.pem
            
  clusters:
  - name: service_backend
    connect_timeout: 2s
    type: STRICT_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service_backend
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 3000

        
  - name: ext-authz
    type: static
    http2_protocol_options: {}
    load_assignment:
      cluster_name: ext-authz
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 50051
    common_lb_config:
      healthy_panic_threshold:
        value: 50.0   
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        no_traffic_interval: 5s
        unhealthy_threshold: 1
        healthy_threshold: 3
        grpc_health_check:
          service_name: "envoy.service.auth.v3.Authorization"
          authority: "server.domain.com"

    connect_timeout: 0.25s
